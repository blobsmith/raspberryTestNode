{
  "name": "hogan-middleware",
  "version": "0.0.1",
  "description": "Middleware component to use Hogan.js mustache templates as views in an Express server",
  "author": {
    "name": "Steve King",
    "email": "steve@mydev.co"
  },
  "contributors": [
    {
      "name": "Steve King",
      "email": "steve@mydev.co"
    }
  ],
  "keywords": [
    "mustache",
    "middleware",
    "template",
    "hogan",
    "express",
    "connect"
  ],
  "repository": {
    "type": "git",
    "url": "git://github.com/steveukx/hogan-middleware"
  },
  "main": "./src/template-engine.js",
  "engines": {
    "node": ">= 0.8.0"
  },
  "dependencies": {
    "hogan.js": "",
    "readdir": "*"
  },
  "readme": "hogan-middleware\n================\n\nMiddleware component to use Hogan.js mustache templates as views in an Express server\n\nUsage\n=====\n\n    var app = express();\n\n    app.configure(function () {\n      app.set('views', __dirname + '/views'); // tell express which directory your views are in\n      app.set('view engine', 'mustache');     // name your templates\n      app.engine('mustache', require('hogan-middleware').__express); // register the engine\n    });\n\nOnce registered, your routing in express can use a mustache file name as the view to be rendered:\n\n    app.get('/', req, res, next) {\n      res.render('home', { SiteName: 'My Website' });\n    }\n\nIn this case there is a file named `home.mustache` in the `views` directory that may have content as:\n\n    <!doctype html>\n    <html>\n      <head><title>Hello World</title></head>\n      <body>\n        <h1>{{SiteName}}</h1>\n      </body>\n    </html>\n\nPartial Templates\n=================\n\nMustache allows the use of partial templates, this is supported by the middleware component by making all templates\navailable as partial templates when rendering a template.\n\nWhen `home.mustache` is being used as the name of the template to be rendered, that can include `a.mustache` from the\nviews directory by adding `{{>a}}`. As `a.mustache` is rendered as a partial, that also has all templates available\nto it for use as partials, so could in turn have `{{>b}}` to include a nested partial.\n\nTo allow for a tidy source tree, templates can be in any number of sub-directories under the main views directory,\nthey are all made available for use as partials without any path identifier.\n\nNote - multiple templates with the same name but in different directories will overwrite each other.\n\nNote - don't include the same template as a partial inside itself.\n\nLive Updating\n=============\n\nAs express uses the the render engine for the first time, a series of watches are added to any sub-directory of the\nviews directory so that any changes are automatically reloaded for you while the server is still running.\n\n",
  "readmeFilename": "README.md",
  "_id": "hogan-middleware@0.0.1",
  "dist": {
    "shasum": "5a025d88ef51106abe2f5f0964e4f94000200331",
    "tarball": "http://registry.npmjs.org/hogan-middleware/-/hogan-middleware-0.0.1.tgz"
  },
  "_npmVersion": "1.1.68",
  "_npmUser": {
    "name": "steveukx",
    "email": "steve@mydev.co"
  },
  "maintainers": [
    {
      "name": "steveukx",
      "email": "steve@mydev.co"
    }
  ],
  "directories": {},
  "_shasum": "5a025d88ef51106abe2f5f0964e4f94000200331",
  "_from": "hogan-middleware@*",
  "_resolved": "http://registry.npmjs.org/hogan-middleware/-/hogan-middleware-0.0.1.tgz",
  "bugs": {
    "url": "https://github.com/steveukx/hogan-middleware/issues"
  },
  "homepage": "https://github.com/steveukx/hogan-middleware"
}
